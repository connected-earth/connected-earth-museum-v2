let map,velocityLayer,preclayer;const markers=[];let loading=3;const state={showWind:!0,showprec:!0,showFireMarkers:!0};function toggleLoadingScreen(){0===--loading&&(document.getElementById("loading-screen").style.display="none")}function initializeMap(){map=L.map("firemap",{zoomControl:!1,minZoom:3,maxZoom:10}).setView([51.505,-.09],3),L.tileLayer("https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png",{attribution:"&copy; OpenStreetMap & CartoDB"}).addTo(map),window.markerCluster=L.markerClusterGroup(),loadDataLayers()}function loadDataLayers(){fetchFireData().then(toggleLoadingScreen),fetchWindData().then(toggleLoadingScreen),fetchPrecipitationData().then(toggleLoadingScreen)}async function fetchFireData(){try{(await d3.csv("/assets/maps/MODIS_C6_1_Global_7d.csv")).filter((e=>+e.confidence>95)).forEach((e=>{markers.push({lat:parseFloat(e.latitude),lon:parseFloat(e.longitude),brightness:parseFloat(e.brightness),info:`Brightness: ${e.brightness}, Confidence: ${e.confidence}`})})),updateFireMarkers()}catch(e){console.error("Error loading fire data:",e)}}async function fetchWindData(){try{const e=await fetch("/assets/maps/gfs.json"),a=await e.json();velocityLayer=L.velocityLayer({displayValues:!0,data:a,maxVelocity:15}),state.showWind&&velocityLayer.addTo(map)}catch(e){console.error("Error loading wind data:",e)}}async function fetchPrecipitationData(){try{const e=await fetch("/assets/maps/prec3.tif"),a=await parseGeoraster(await e.arrayBuffer());preclayer=new GeoRasterLayer({georaster:a,opacity:.75,resolution:64,pixelValuesToColorFn:e=>e[0]>20?chroma.scale(["lightblue","blue","darkblue"])(e[0]/1e3).hex():null}),state.showprec&&preclayer.addTo(map)}catch(e){console.error("Error loading precipitation data:",e)}}function updateFireMarkers(){window.markerCluster.clearLayers(),state.showFireMarkers&&(markers.forEach((({lat:e,lon:a,brightness:t,info:r})=>{window.markerCluster.addLayer(L.marker([e,a],{icon:L.divIcon({className:"custom-marker",html:`<div style="background:${getMarkerColor(t)}; width:10px; height:10px; border-radius:50%;"></div>`})}).bindPopup(r))})),map.addLayer(window.markerCluster))}function getMarkerColor(e){return e>400?"#ff0000":e>350?"#ffa500":"#ffff00"}document.addEventListener("DOMContentLoaded",(()=>{document.getElementById("loading-screen").style.display="flex",initializeMap(),document.getElementById("toggleFiremarkers").addEventListener("change",(e=>{state.showFireMarkers=e.target.checked,updateFireMarkers()})),document.getElementById("toggleVelocity").addEventListener("change",(e=>{e.target.checked?velocityLayer.addTo(map):map.removeLayer(velocityLayer)})),document.getElementById("togglePrec").addEventListener("change",(e=>{e.target.checked?preclayer.addTo(map):map.removeLayer(preclayer)}))}));