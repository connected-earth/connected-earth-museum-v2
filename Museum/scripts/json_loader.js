import*as THREE from"three";export async function loadPointsFromJson(r){try{const o=await fetch(r);if(!o.ok)throw new Error("Erro ao carregar o JSON");const t=await o.json();if(!t.path||!Array.isArray(t.path))throw new Error('O JSON não contém um array válido em "points".');return t.path.map((r=>new THREE.Vector3(r.x,r.y,r.z)))}catch(r){return console.error("Erro ao carregar JSON:",r.message),[]}}export async function loadPaintingsInfo(r){try{const o=await fetch(r);if(!o.ok)throw new Error(`Failed to load JSON: ${o.statusText}`);const t=await o.json();return console.log("Paintings loaded:",t),t}catch(r){return console.error("Error loading paintings:",r),[]}}export async function loadDict(r){try{const o=await fetch(r);if(!o.ok)throw new Error("Failed to load JSON");const t=await o.json();if("object"!=typeof t||null===t)throw new Error("Invalid JSON format: Expected an object");return t}catch(r){return console.error("Error loading dictionary:",r),{}}}